{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fecthCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fecthCollectionsSuccess = collectionMap => ({\n  type: ShopActionTypes.FECTH_COLLECTIONS_SUCCESS,\n  payload: collectionMap\n});\nexport const fecthCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FECTH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fecthCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fecthCollectionsStart);\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fecthCollectionsSuccess(collectionMap));\n    }).catch(error => dispatch(fecthCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:/Users/Saolong/Desktop/React-course/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fecthCollectionsStart","type","FETCH_COLLECTIONS_START","fecthCollectionsSuccess","collectionMap","FECTH_COLLECTIONS_SUCCESS","payload","fecthCollectionsFailure","errorMessage","FECTH_COLLECTIONS_FAILURE","fecthCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA0D,+BAA1D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADkB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,aAAD,KAAoB;AACvDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADiC;AAEvDC,EAAAA,OAAO,EAAEF;AAF8C,CAApB,CAAhC;AAKP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAAK;AACpDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBAD8B;AAEpDH,EAAAA,OAAO,EAAEE;AAF2C,CAAL,CAA5C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC5C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAD,CAAR;AAEAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,YAAMZ,aAAa,GAAGL,+BAA+B,CAACiB,QAAD,CAArD;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,aAAD,CAAxB,CAAR;AACH,KAHD,EAGGa,KAHH,CAGSC,KAAK,IAAIP,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAH1B;AAIH,GARD;AASH,CAVM","sourcesContent":["import ShopActionTypes from './shop.types';\r\nimport { firestore, convertCollectionsSnapshotToMap }from '../../firebase/firebase.utils'\r\n\r\nexport const fecthCollectionsStart = () => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\r\n});\r\n\r\nexport const fecthCollectionsSuccess = (collectionMap) => ({\r\n    type: ShopActionTypes.FECTH_COLLECTIONS_SUCCESS,\r\n    payload: collectionMap\r\n});\r\n\r\nexport const fecthCollectionsFailure = errorMessage => ({\r\n    type: ShopActionTypes.FECTH_COLLECTIONS_FAILURE,\r\n    payload: errorMessage\r\n})\r\n\r\nexport const fecthCollectionsStartAsync = () => {\r\n    return dispatch => {\r\n        const collectionRef = firestore.collection('collections');\r\n        dispatch(fecthCollectionsStart);\r\n\r\n        collectionRef.get().then(snapshot => {\r\n            const collectionMap = convertCollectionsSnapshotToMap(snapshot);\r\n            dispatch(fecthCollectionsSuccess(collectionMap));\r\n        }).catch(error => dispatch(fecthCollectionsFailure(error.message)));\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}